<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dongdong devlog.</title>
  
  <subtitle>better than yesterday</subtitle>
  <link href="http://hoon-e.github.io/atom.xml" rel="self"/>
  
  <link href="http://hoon-e.github.io/"/>
  <updated>2021-05-19T15:14:55.581Z</updated>
  <id>http://hoon-e.github.io/</id>
  
  <author>
    <name>dongdong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HDFS Federation이란?</title>
    <link href="http://hoon-e.github.io/2021/05/19/hdfs-federation/"/>
    <id>http://hoon-e.github.io/2021/05/19/hdfs-federation/</id>
    <published>2021-05-19T13:31:11.000Z</published>
    <updated>2021-05-19T15:14:55.581Z</updated>
    
    <content type="html"><![CDATA[<p>나중에 사용할 수도 있을 것 같아 Hadoop3 버전부터 신규로 추가된 페더레이션 기능을 공부해보았다.<br>Hadoop 공식 문서 중 HDFS Federation 부분을 번역한 내용이다. <br></p><!-- toc --><h1 id="배경"><a href="#배경" class="headerlink" title="배경"></a>배경</h1><img src="/image/hdfs.png" width="250px" height="250px">HDFS는 두 가지의 레이어를 가지고 있다.<ul><li>Namespace<ul><li>디렉토리, 파일, 블록으로 구성되어 있다.</li><li>생성, 삭제, 변경, 파일과 디렉토리 나열과 같은 파일 시스템 작업들을 지원한다.</li></ul></li><li>Block Storage Service<ul><li>블록 스토리지 서비스는 <span class="highlight-text primary">블록 관리</span>와 <span class="highlight-text primary">저장소</span> 두 가지로 분류 할 수 있다.</li><li>블록 관리(Block Management) - 네임 노드에서 수행된다.<ul><li>등록 작업 및 주기적인 heartbeat를 체크하여, 데이터 노드들 간의 클러스터 멤버십을 제공한다.</li><li>블록 리포트를 처리하고 블록들의 위치를 유지한다.</li><li>생성, 삭제, 변경, 블록 위치 반환과 같은 블록 연관 작업을 지원한다.</li><li>복제본 배치, 덜 복제된 블록들의 복제 작업을 관리하고 초과로 복제된 블록들은 삭제한다.</li></ul></li><li>저장소(Storage)<ul><li>데이터 노드에 의해 제공된다.</li><li>로컬 파일 시스템에 블록을 저장하고 읽기/쓰기 접근을 허용한다.</li></ul></li></ul></li></ul><p>이전의 HDFS 아키텍쳐에서는전체 클러스터에 단 하나의 네임스페이스만을 허용했다.<br>이 구성에서는 단일 네임 노드가 네임 스페이스를 관리했다.<br>HDFS 페더레이션은  <span class="highlight-text primary">HDFS에 여러 네임 노드 / 네임 스페이스에 대한 지원을 추가</span>해서, 이러한 제약 조건을 해결하였다.</p><h1 id="여러-개의-네임-노드-네임-스페이스"><a href="#여러-개의-네임-노드-네임-스페이스" class="headerlink" title="여러 개의 네임 노드 / 네임 스페이스"></a>여러 개의 네임 노드 / 네임 스페이스</h1><p>HDFS 페더레이션에 대해 설명하면 다음과 같다.</p><ul><li>여러 개의 네임 스페이스들을 수평적으로 확장하기 위해서 페더레이션에서는 여러개의 독립적인 네임 노드 / 네임 스페이스를 사용한다.</li><li>네임 노드들은 서로 연합된다.</li><li>네임 노드들은 서로 독립적이고, 서로 간의 코디네이션이 필요없다.</li><li>데이터 노드들은 모든 네임 노드들의 공통적인 저장소로서 사용된다.</li><li>각 데이터 노드는 클러스터 내의 모든 네임 노드들에 등록된다.</li><li>데이터 노드는 주기적인 heartbeat 및 블록 리포트를 전송하고, 네임 노드의 명령을 처리한다.</li></ul><p>사용자는 ViewFs를 사용해서 개인화된 네임 스페이스 뷰를 만들 수 있다.<br><img src="/image/viewfs.png" width="500px" height="360px"></p><h2 id="Block-Pool"><a href="#Block-Pool" class="headerlink" title="Block Pool"></a>Block Pool</h2><p>블록 풀은 단일 네임 스페이스에 속하는 블록들의 집합이다.<br>데이터 노드는 클러스터의 모든 블록 풀에 대한 블록을 저장하게된다.<br>각 블록 풀은 독립적으로 관리된다. 이를 통해서 네임 스페이스는 다른 네임 스페이스와 조정 없이 새롭게 생성되는 블록에 대한 블록 ID를 생성할 수 있다.<br>특정 네임 노드에 장애가 발생하더라도, 데이터 노드가 클러스터 내의 다른 네임 노드와 동작하는 것에 영향을 주지 않는다.</p><p>네임 스페이스와 관련된 블록 풀을 묶어서 <span class="highlight-text primary">네임 스페이스 볼륨(Namespace volume)</span> 이라고 부른다.<br>네임 노드 / 네임 스페이스가 삭제되면, 데이터 노드의 해당 블록 풀들도 같이 사라진다.<br>각 네임 스페이스 볼륨은 클러스터 업그레이드 시에 하나의 단위로서 업그레이드 된다.</p><h2 id="클러스터-ID-cluster-id"><a href="#클러스터-ID-cluster-id" class="headerlink" title="클러스터 ID( cluster id )"></a>클러스터 ID( cluster id )</h2><p>클러스터 ID 식별자는 클러스터의 모든 노드들을 식별하는 데에 사용된다.<br>네임 노드 형식이 지정되면, 식별자가 제공되거나 자동으로 생성된다.<br>이 ID는 다른 네임 노드들을 클러스터로 포함시키는데에 사용해야 한다.</p><p>그렇다면 HDFS 페더레이션을 하게되면 생기는 이점은 무엇일까</p><ul><li>네임 스페이스 확장성(Namespace Scalability)<ul><li>페더레이션은 네임 스페이스를 수평적으로 확장할 수 있도록 한다.</li><li>다수의 작은 파일을 사용하는 배포 혹은 대규모 배포에서 더 많은 네임 노드를 클러스터에 추가할 수 있도록 해서 이점을 얻을 수 있다.</li></ul></li><li>성능(Performance)<ul><li>클러스터에 여러 네임 노드가 추가되면 파일 시스템 읽기/쓰기 처리량이 늘어나게된다.</li></ul></li><li>격리(Isolation)<ul><li>하나의 네임 노드는 다중 사용자 환경에서 격리를 제공하지 못한다.</li><li>예를 들어 실험용 어플리케이션이 네임 노드에 부하를 주어, 실제로 프로덕션에서 중요한 작업이 느려지는 경우를 막을 수 있다.</li><li>이러한 경우 네임 노드에 부하가 가지 않도록 어플리케이션과 사용자의 범주를 네임스페이스 별로 따로 분리할 수 있다.</li></ul></li></ul><h1 id="페더레이션-설정"><a href="#페더레이션-설정" class="headerlink" title="페더레이션 설정"></a>페더레이션 설정</h1><p>페더레이션 설정은 이전 버전과도 호환이 되고, 기존에 동작하던 단일 네임 노드 구성에 변경없이 동작할 수 있도록 지원한다.<br>새 설정값은 클러스터 노드 유형에 따라서 다르게 배포할 필요없이, 클러스터의 모든 노드가 동일한 구성을 가지도록 설계되었다.</p><p>페더레이션은 새로운 nameserviceID 추상화를 추가한다.<br>네임 노드와 연관되어있는 세컨더리, 백업, 체크포인터 노드들은 이 nameserviceId에 포함된다.<br>단일 설정 파일을 지원하기 위해서, 네임 노드 및 세컨더리, 백업, 체크포인터 노드 <span class="highlight-text primary">설정 매개변수의 접미사로 nameserviceID가 사용된다.</span></p><h1 id="설정하기"><a href="#설정하기" class="headerlink" title="설정하기"></a>설정하기</h1><h2 id="step-1"><a href="#step-1" class="headerlink" title="step 1."></a>step 1.</h2><p><code>dfs.nameservices</code> 속성값을 설정파일에 추가하고, nameserviceId를 콤마로 구분하여 넣는다. 이 설정값은 데이터 노드들이 클러스터 내의 네임 노드들을 구분하는 데 사용된다.</p><h2 id="step-2"><a href="#step-2" class="headerlink" title="step 2."></a>step 2.</h2><p>각 네임노드 및 세컨더리 네임노드, 백업 노드, 체크 포인터에 대해서 해당 nameserviceId 접미사가 붙은 속성값들을 설정 파일에 추가한다.</p><table><thead><tr><th align="center">데몬</th><th align="left">설정값</th></tr></thead><tbody><tr><td align="center">네임 노드</td><td align="left">dfs.namenode.rpc-address<br> dfs.namenode.servicerpc-address <br>dfs.namenode.http-address<br>dfs.namenode.https-address<br>dfs.namenode.keytab.file<br>dfs.namenode.name.dir<br>dfs.namenode.edits.dir<br>dfs.namenode.checkpoint.dir<br>dfs.namenode.checkpoint.edits.dir</td></tr><tr><td align="center">세컨더리 네임노드</td><td align="left">dfs.namenode.secondary.http-address<br>dfs.secondary.namenode.keytab.file</td></tr><tr><td align="center">백업 노드</td><td align="left">dfs.namenode.backup.address<br>dfs.secondary.namenode.keytab.file</td></tr></tbody></table><br>두 개의 네임 노드들의 설정값을 예로 들면 해당 속성값 뒤에 .namespaceId가 붙어있는 것을 확인할 수 있다.<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.nameservices<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>ns1,ns2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  ..</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.ns1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>nn-host1:http-port<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.ns2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>nn-host2:http-port<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="동작하고-있는-HDFS-클러스터에-새로운-네임노드-추가하기"><a href="#동작하고-있는-HDFS-클러스터에-새로운-네임노드-추가하기" class="headerlink" title="동작하고 있는 HDFS 클러스터에 새로운 네임노드 추가하기"></a>동작하고 있는 HDFS 클러스터에 새로운 네임노드 추가하기</h2><ul><li>설정 파일에 <code>dfs.nameservices</code> 속성을 추가한다.</li><li>nameserviceId 접미사로 설정을 업데이트한다. 설정 키 이름은 릴리스 0.20 이후 변경 되었으며 페더레이션을 사용하려면 새로운 설정 매개 변수 이름을 사용해야한다.</li><li>설정 파일에 새로운 네임노드 관련 속성값을 추가한다.</li><li>클러스터 내의 모든 노드들에 해당 설정파일을 적용한다.</li><li>새로운 네임 노드와 세컨 더리/백업 노드를 시작한다.</li><li>새롭게 추가된 네임 노드를 데이터 노드들에게 알리기 위해 모든 데이터 노드들에서 해당 커맨드를 실행시켜준다.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$HADOOP_HOME</span>/bin/hdfs dfsadmin -refreshNamenodes &lt;datanode_host_name&gt;:&lt;datanode_ipc_port&gt;</span><br></pre></td></tr></table></figure></li></ul><p>문서 링크 : <a href="https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/Federation.html">HDFS Federation</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;나중에 사용할 수도 있을 것 같아 Hadoop3 버전부터 신규로 추가된 페더레이션 기능을 공부해보았다.&lt;br&gt;Hadoop 공식 문서 중 HDFS Federation 부분을 번역한 내용이다. &lt;br&gt;&lt;/p&gt;
&lt;!-- toc --&gt;
&lt;h1 id=&quot;배</summary>
      
    
    
    
    <category term="big-data" scheme="http://hoon-e.github.io/categories/big-data/"/>
    
    
    <category term="hadoop" scheme="http://hoon-e.github.io/tags/hadoop/"/>
    
    <category term="hdfs" scheme="http://hoon-e.github.io/tags/hdfs/"/>
    
  </entry>
  
</feed>
